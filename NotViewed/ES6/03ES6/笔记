Set结构
    1、成员的值是唯一的，不能出现重复的值
    2、NaN是等于NaN，对象是不等于对象
    3、成员的键名和键值是一样的
    属性和方法
        size：       返回Set实例的成员总数
        add()：      增加成员
        delete()：   删除成员
        has()：      判断是否存在成员
        clear()：    清除所有的成员
        forEach()：  遍历成员
        keys()：     返回成员的键名
        values()：   返回成员的键值
        entries()：  返回成员的键名和键值
WeakSet结构
    1、成员的值也是唯一的，不能出现重复的值
    2、不能存放基本类型，只能存放引用类型
    3、存放的对象是弱引用，如果外部不引用该对象，对象就会自动被垃圾回收机制回收所占的内存
    方法（没有遍历方法和size属性）
        add()：      增加成员
        delete()：   删除成员
        has()：      判断是否存在成员

对象
    1、键名可以用表达式，须用一对方括号包裹
    2、当键名和变量名一样时才可简化对象的属性
    3、可以简化对象的方法
Symbol
    1、是新增的基本类型，不能增加属性和方法
    2、Symbol函数没有constructor属性，故不能使用new操作符
    3、Symbol函数的返回值是独一无二的
    4、Symbol函数可以接受一个字符串作为参数，表示对Symbol实例的描述
    5、Symbol不能用于算术运算和不会自动类型转换
    6、Symbol类型做为对象的键名时须一对方括号包裹，调用时不能用点运算符或引号包裹
    7、Symbol类型的对象键名可通过Object.getOwnPropertySymbols()获取
    Symbol.for(描述): 搜索有没有以该参数作为名称的Symbol值。
                如果有，就返回这个Symbol值，否则就新建并返回一个以该字符串为名称的Symbol值。
    Symbol.keyFor()：用于返回Symbol.for创建的Symbol值的描述，不能用于Symbol函数创建的Symbol值